@page "/authors/details/{id:int}"
@inject NavigationManager navManager
@inject IAuthorService authorService

<h3>Author Details</h3>

<EditForm Model="Author">
    <fieldset disabled="true">
            <div class="form-group">
        <label for="firstname">First Name</label>
        <InputText @bind-Value="Author.FirstName" class="form-control" id="firstname" />
        <ValidationMessage For="@(() => Author.FirstName)" />
    </div>
    <br/>
    <div class="form-group">
        <label for="lastname">Last Name</label>
        <InputText @bind-Value="Author.LastName" class="form-control" id="lastname" />
        <ValidationMessage For="@(() => Author.LastName)" />
    </div>
    <br/>
    <div class="form-group">
        <label for="bio">Bio</label>
        <InputText @bind-Value="Author.Bio" class="form-control" id="bio" />
        <ValidationMessage For="@(() => Author.Bio)" />
    </div>

       <div class="form-group">
        <label for="bio">Bio</label>
        <InputText @bind-Value="Author.Bio" class="form-control" id="bio" />
        <ValidationMessage For="@(() => Author.Bio)" />
    </div>
    <br/>
    </fieldset>
    @if (Author.Books == null || Author.Books.Any() == false)
    {
        <div class="alert alert-dismissible alert-secondary">
            No Books from this author avalible
        </div>
    }
    else
    {
        <div class="row">
        @foreach(var book in Author.Books)
        {
        <div class="col-3">
       <div class="card" style="width: 18rem;">
        <img class="card-img-top" src="@book.Image" alt="@book.Title" style="width:286px; height:100%;">
        <div class="card-body">
        <h5 class="card-title">@book.Title - @book.Price.ToString("C")</h5>
        <p class="card-text"></p>
        <a href="#" class="btn btn-primary">View Book</a>
        </div>
         </div>
         </div>
         }
         </div>
    }

    <button @onclick="GoToEdit" class="btn btn-warning">
        <span class="oi oi-pencil"></span>
        Edit Author
    </button>

    <button @onclick="BackToList" class="btn btn-outline-secondary">
        <span class="oi oi-media-step-backward"></span>
        Back to list
    </button>
</EditForm>

@code {
     [Parameter]
    public int id { get; set; }

    private AuthorDetailsDto Author = new AuthorDetailsDto();

    protected async override Task OnInitializedAsync()
    {
        var response = await authorService.Get(id);
        if (response.Success)
        {
            Author = response.Data;
        }
    }

    private void BackToList()
    {
        navManager.NavigateTo("/authors/");
    }
     private void GoToEdit()
    {
        navManager.NavigateTo($"/authors/update/{Author.Id}");
    }

}
