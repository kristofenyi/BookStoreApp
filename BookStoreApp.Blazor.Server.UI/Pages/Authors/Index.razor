@page "/authors"
@using BookStoreApp.Blazor.Server.UI.Models
@inject IClient httpClient
@inject IAuthorService authorService
@inject IJSRuntime js

<h3>Authors</h3>

@if (response.Success == false)
{
    <div class="alert alert-danger">
    <h4>@response.Message</h4>
    </div>
}
else
{
    @if (Authors == null)
    {
        <div class="alert alert-info">
            <h4>Loading...</h4>
        </div>
    }
    else
    {
        <AuthorizeView Roles="Administrator"> 
            <a class="btn btn-dark" href="/authors/create"><span class="oi oi-plus" aria-hidden="true"></span> Create</a> 
        </AuthorizeView>
        <br/>
        <AuthorTable Authors="Authors" TotalSize="TotalSize" OnScroll="LoadAuthors" />
    }
}


@code {
    public List<AuthorReadOnlyDto> Authors;
    public int TotalSize { get; set; }
    private Response<AuthorReadOnlyDtoVirtualizeResponse> response = new Response<AuthorReadOnlyDtoVirtualizeResponse> { Success = true};

    protected override async Task OnInitializedAsync()
    {
        response = await authorService.Get(new QueryParameters {StartIndex = 0});
        if (response.Success)
        {
            Authors = response.Data.Items.ToList();
        }
    }

    private async Task LoadAuthors(QueryParameters queryParms)
    {
        var virtualizeResult = await authorService.Get(queryParms);
        Authors = virtualizeResult.Data.Items.ToList();
        TotalSize = virtualizeResult.Data.TotalSize;
    }

}

